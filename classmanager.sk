# --------------------------------------------------
# |                                                |
# |                Classes - Manager               |
# |                                                |
# --------------------------------------------------
# Description: This file handles the joining and leaving of classes. It assumes
# lp perms are being used and permissions can be set directly on the players.
# Players can use /classjoin <name> to join a class, /classleaveall to leave all
# classes, and /classleave <name> to leave a specific class.
#
# This is basically the config section. To change a time enter it like <Number>
# <Unit>. A few examples: 3 minutes, 15 seconds, 1 hour. To change damage, heal,
# and chance values simply enter a number. A few examples: 50, 0.5, 1. To change
# a true/false simply enter <true/false>. Examples:  true, false.

options:

        # Permission nodes
        classes manager admin node : skript.classes.adminmanage # TODO
        classes manager node : skript.classes.selfmanage
        assassin node : skript.classes.assassin
        bard node : skript.classes.bard
        berserker node : skript.classes.berserker
        paladin node : skript.classes.paladin
        pyromancer node : skript.classes.pyromancer
        caster node : skript.classes.caster
        fighter node : skript.classes.fighter

        # Message options
        # TODO: Message frequency (None/Normal/Verbose). Players can also set
        # their own. if they have not set one this one will be used.
        message frequency : "normal"
        # Classes prefix
        classes prefix : &8[&9Skript&8]
        # Manager prefix
        manager prefix : &8[&dClasses&8]
        # Success
        success : &8[&a&lSuccess&8]
        # Warn
        warn : &8[&6&lWarn&8]
        # Message color
        message color : &7

        # Enabled/Disabled classes
        assassin : true
        bard : true
        berserker : true
        paladin : true
        pyromancer : true


# -----------------------------------------------------------------------------
# Editing bellow this line may cause unintended effects. Please continue only if
# you have sufficient general programming or scripting experience. For those not
# experienced in Skript... its kind of odd so maybe this website can help...
# http://en.njol.ch/projects/skript/doc/variables


# Handles the actual joining of the class, the permission nodes. There is no
# logic to determine if someone can join a class here though.
function joinclass(user:player,choice:text):

        # Classifications.
        if {_choice} is "asassin" or "berserker":
                make console execute command "lp user %{_user}% permission set {@fighter node}"
        else if {_choice} is "bard" or "paladin" or "pyromancer":
                make console execute command "lp user %{_user}% permission set {@caster node}"

        # Actual permission nodes.
        if {_choice} is "assassin":
                make console execute command "lp user %{_user}% permission set {@assassin node}"
        else if {_choice} is "bard":
                make console execute command "lp user %{_user}% permission set {@bard node}"
        else if {_choice} is "berserker":
                make console execute command "lp user %{_user}% permission set {@berserker node}"
        else if {_choice} is "paladin":
                make console execute command "lp user %{_user}% permission set {@paladin node}"
        else if {_choice} is "pyromancer":
                make console execute command "lp user %{_user}% permission set {@pyromancer node}"

        # Send a message that everything worked.
        send "{@classes prefix} {@manager prefix} {@success}{@message color} You have joined the the %{_choice}%{@message color} class!" to {_user}


# Sends a message containing all the currently valid classes. Admins also see
# disabled classes.
function classlist(user:player):

        # Send the admin list.
        if {_user} has permission "{@classes manager admin node}":
                send "{@message color}- assassin(&8{@assassin}{@message color})" to {_user}
                send "{@message color}- bard(&8{@bard}{@message color})" to {_user}
                send "{@message color}- berserker(&8{@berserker}{@message color})" to {_user}
                send "{@message color}- paladin(&8{@paladin}{@message color})" to {_user}
                send "{@message color}- pyromancer(&8{@pyromancer}{@message color})" to {_user}

        # Send the enabled classes one by one for non-admins
        else:
                if {@assassin}:
                        send "{@message color}- assassin" to {_user}
                if {@bard}:
                        send "{@message color}- bard" to {_user}
                if {@berserker}:
                        send "{@message color}- berserker" to {_user}
                if {@paladin}:
                        send "{@message color}- paladin" to {_user}
                if {@pyromancer}:
                        send "{@message color}- pyromancer" to {_user}


# Join a class.
command /classjoin <text>:
        permission: {@classes manager node}
        trigger:
                if player has permission "{@assassin node}" or "{@bard node}" or "{@berserker node}" or "{@paladin node}" or "{@pyromancer node}":
                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} You must leave your current class to join a new one!"
                else:
                        if arg-1 is "assassin":
                                if {@assassin}:
                                        make console execute command "lp user %player% permission set {@assassin node}"
                                        make console execute command "lp user %player% permission set {@fighter node}"
                                        send "{@classes prefix} {@manager prefix} {@success}{@message color} You have joined the assassin class!"
                                else:
                                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} Assassin is currently disabled."
                        else if arg-1 is "bard":
                                if {@bard}:
                                        make console execute command "lp user %player% permission set {@bard node}"
                                        make console execute command "lp user %player% permission set {@caster node}"
                                        send "{@classes prefix} {@manager prefix} {@success}{@message color} You have joined the bard class!"
                                else:
                                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} Bard is currently disabled."
                        else if arg-1 is "berserker":
                                if {@berserker}:
                                        make console execute command "lp user %player% permission set {@berserker node}"
                                        make console execute command "lp user %player% permission set {@fighter node}"
                                        send "{@classes prefix} {@manager prefix} {@success}{@message color} You have joined the berserker class!"
                                else:
                                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} Berserker is currently disabled."
                        else if arg-1 is "paladin":
                                if {@paladin}:
                                        make console execute command "lp user %player% permission set {@paladin node}"
                                        make console execute command "lp user %player% permission set {@caster node}"
                                        send "{@classes prefix} {@manager prefix} {@success}{@message color} You have joined the paladin class!"
                                else:
                                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} Paladin is currently disabled."
                        else if arg-1 is "pyromancer":
                                if {@pyromancer}:
                                        joinclass(player,"pyromancer")
                                else if player has permission "{@classes manager admin node}":
                                        joinclass(player,"pyromancer")
                                else:
                                        send "{@classes prefix} {@manager prefix} {@warn}{@message color} Pyromancer is currently disabled."
                        else:
                                send "{@classes prefix} {@manager prefix} {@warn}{@message color} %arg-1% {@message color}is not a recognized class. Currently enabled classes are:"
                                classlist(player)


# Sets all class nodes to false
command /classleaveall:
        permission: {@classes manager node}
        trigger:
                make console execute command "lp user %player% permission set {@caster node} false"
                make console execute command "lp user %player% permission set {@fighter node} false"
                make console execute command "lp user %player% permission set {@assassin node} false"
                make console execute command "lp user %player% permission set {@bard node} false"
                make console execute command "lp user %player% permission set {@berserker node} false"
                make console execute command "lp user %player% permission set {@paladin node} false"
                make console execute command "lp user %player% permission set {@pyromancer node} false"
                send "{@classes prefix} {@manager prefix} {@success}{@message color} You have left all classes!"

# Ui for the class manager.
command /classes:
        permission: {@classes manager node}
        trigger:
                open chest with 6 rows named "Combat Classes" to player
                set {_slot} to 0
                while {_slot} is less than 54:
                        format slot {_slot} of player with a gray stained glass pane named " " to be unstealable
                        add 1 to {_slot}

                if player has permission "{@fighter node}":
                        set slot 12 of player's current inventory to iron sword named "&8[&9Archtype&8]&7 Fighter"
                        set the 1st line of lore of slot 12 of player's current inventory to "&7Through your years of training in combat"
                        set the 2nd line of lore of slot 12 of player's current inventory to "&7you've suffered many injuries and can apply"
                        set the 3rd line of lore of slot 12 of player's current inventory to "&7basic &3first aid &8[&6&lDev&8] &7using paper."
                else if player has permission "{@caster node}":
                        set slot 12 of player's current inventory to enchanting table named "&8[&9Archtype&8]&7 Caster"
                        set the 1st line of lore of slot 12 of player's current inventory to "&7Casters have powerful abilities which depend"
                        set the 2nd line of lore of slot 12 of player's current inventory to "&7on the class selected. Through your years"
                        set the 3rd line of lore of slot 12 of player's current inventory to "&7of study in getting these skills your muscles"
                        set the 4th line of lore of slot 12 of player's current inventory to "&7have grown weaker and you take additional"
                        set the 5th line of lore of slot 12 of player's current inventory to "&7damage from &dplayers&7 who are &9fighters&7."
                else:
                        set slot 12 of player's current inventory to barrier named "&8[&9Archtype&8]&c&l None"
                        set the 1st line of lore of slot 12 of player's current inventory to "&7You likely are not part of any class right now"
                        set the 2nd line of lore of slot 12 of player's current inventory to "&7and as a result have no archtype."

                if player has permission "{@assassin node}":
                        set slot 14 of player's current inventory to ghast tear named "&8[&6Class&8]&7 Assassin"
                else if player has permission "{@bard node}":
                        set slot 14 of player's current inventory to note block named "&8[&6Class&8]&7 Bard"
                else if player has permission "{@berserker node}":
                        set slot 14 of player's current inventory to rotten flesh named "&8[&6Class&8]&7 Berserker"
                else if player has permission "{@paladin node}":
                        set slot 14 of player's current inventory to golden shovel named "&8[&6Class&8]&7 Paladin"
                else if player has permission "{@pyromancer node}":
                        set slot 14 of player's current inventory to blaze powder named "&8[&6Class&8]&7 Pyromancer"
                else:
                        set slot 14 of player's current inventory to barrier named "&8[&6Class]&8&c&l None"

                set slot 29 of player's current inventory to ghast tear named "&8[&9Fighter&8] &8[&6Assassin&8]"
                set slot 30 of player's current inventory to note block named "&8[&9Caster&8] &8[&6Bard&8]"
                set slot 31 of player's current inventory to rotten flesh named "&8[&9Fighter&8] &8[&6Berserker&8]"
                set slot 32 of player's current inventory to golden shovel named "&8[&9Caster&8] &8[&6Paladin&8]"
                set slot 33 of player's current inventory to blaze powder named "&8[&9Caster&8] &8[&6Pyromancer&8]"

                set slot 40 of player's current inventory to bow named "&8[&9Fighter&8] &8[&6Marksmen&8]"
                set the 1st line of lore of slot 40 of player's current inventory to "&4In development"
